{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ObserveRTC \u00b6 ObserverRTC is an open source framework for monitoring WebRTC services. We are in the process of documenting this project - please check back often. See our integrations for quick use with Jitsi Meet and Tokbox/Vonage/Nexmo Opentok . See here for deploying the infrastructure with docker-compose. Use Case \u00b6 coming soon.. Architecture \u00b6 coming soon..","title":"Home"},{"location":"#welcome-to-observertc","text":"ObserverRTC is an open source framework for monitoring WebRTC services. We are in the process of documenting this project - please check back often. See our integrations for quick use with Jitsi Meet and Tokbox/Vonage/Nexmo Opentok . See here for deploying the infrastructure with docker-compose.","title":"Welcome to ObserveRTC"},{"location":"#use-case","text":"coming soon..","title":"Use Case"},{"location":"#architecture","text":"coming soon..","title":"Architecture"},{"location":"team/","text":"Observe RTC Team \u00b6 Balazs Kreith \u00b6 Add Intro.. Binoy Chemmagate \u00b6 Add Intro.. Chad Hart \u00b6 Add Intro.. Pallab Gain \u00b6 Add Intro..","title":"Members"},{"location":"team/#observe-rtc-team","text":"","title":"Observe RTC Team"},{"location":"team/#balazs-kreith","text":"Add Intro..","title":"Balazs Kreith"},{"location":"team/#binoy-chemmagate","text":"Add Intro..","title":"Binoy Chemmagate"},{"location":"team/#chad-hart","text":"Add Intro..","title":"Chad Hart"},{"location":"team/#pallab-gain","text":"Add Intro..","title":"Pallab Gain"},{"location":"setup/step-1-observer-and-exporter-installation/","text":"Prerequisites \u00b6 Kafka \u00b6 We are using Kafka for real-time WebRTC report processing. The WebRTC reports are being forwarded to Kafka for processing to be consumed by the exporter (e.g. Kafka connectors). MySQL \u00b6 MySQL is used as a temporary structured storage for aggregating vital information about the call which is distributed among several observer instances. Configuration \u00b6 Configure Kafka and MySQL in the Observer \u00b6 1. Observer can be setup by using a yaml configuration file for micronaut microservice \u00b6 2. Enter your Kafka configuration \u00b6 kafka . bootstrap . servers 3. Enter your MySQL configuration \u00b6 hikari . jdbcUrl 4. Customize your reporting configuration if needed. \u00b6 Configure BigQuery in the Exporter \u00b6 1. Obtain credentials for BigQuery \u00b6 2. Exporter can be setup by using a yaml configuration file for micronaut microservice \u00b6 3. Setup Kafka in configuration \u00b6 kafka . bootstrap . servers 4. Setup bigquery credentials in config yaml. \u00b6 GOOGLE_APPLICATION_CREDENTIALS environment variable to point to the obtained credential file Deployment \u00b6 Docker \u00b6 You can use deployment script for docker published here: Kubernetes using HELM \u00b6 You can use helm chart for this described here:","title":"Step 1 Observer and Exporter Installation"},{"location":"setup/step-1-observer-and-exporter-installation/#prerequisites","text":"","title":"Prerequisites"},{"location":"setup/step-1-observer-and-exporter-installation/#kafka","text":"We are using Kafka for real-time WebRTC report processing. The WebRTC reports are being forwarded to Kafka for processing to be consumed by the exporter (e.g. Kafka connectors).","title":"Kafka"},{"location":"setup/step-1-observer-and-exporter-installation/#mysql","text":"MySQL is used as a temporary structured storage for aggregating vital information about the call which is distributed among several observer instances.","title":"MySQL"},{"location":"setup/step-1-observer-and-exporter-installation/#configuration","text":"","title":"Configuration"},{"location":"setup/step-1-observer-and-exporter-installation/#configure-kafka-and-mysql-in-the-observer","text":"","title":"Configure Kafka and MySQL in the Observer "},{"location":"setup/step-1-observer-and-exporter-installation/#1-observer-can-be-setup-by-using-a-yaml-configuration-file-for-micronaut-microservice","text":"","title":"1. Observer can be setup by using a yaml configuration file for micronaut microservice"},{"location":"setup/step-1-observer-and-exporter-installation/#2-enter-your-kafka-configuration","text":"kafka . bootstrap . servers","title":"2. Enter your Kafka configuration"},{"location":"setup/step-1-observer-and-exporter-installation/#3-enter-your-mysql-configuration","text":"hikari . jdbcUrl","title":"3. Enter your MySQL configuration"},{"location":"setup/step-1-observer-and-exporter-installation/#4-customize-your-reporting-configuration-if-needed","text":"","title":"4. Customize your reporting configuration if needed."},{"location":"setup/step-1-observer-and-exporter-installation/#configure-bigquery-in-the-exporter","text":"","title":"Configure BigQuery in the Exporter "},{"location":"setup/step-1-observer-and-exporter-installation/#1-obtain-credentials-for-bigquery","text":"","title":"1. Obtain credentials for BigQuery"},{"location":"setup/step-1-observer-and-exporter-installation/#2-exporter-can-be-setup-by-using-a-yaml-configuration-file-for-micronaut-microservice","text":"","title":"2. Exporter can be setup by using a yaml configuration file for micronaut microservice"},{"location":"setup/step-1-observer-and-exporter-installation/#3-setup-kafka-in-configuration","text":"kafka . bootstrap . servers","title":"3. Setup Kafka in configuration"},{"location":"setup/step-1-observer-and-exporter-installation/#4-setup-bigquery-credentials-in-config-yaml","text":"GOOGLE_APPLICATION_CREDENTIALS environment variable to point to the obtained credential file","title":"4. Setup bigquery credentials in config yaml."},{"location":"setup/step-1-observer-and-exporter-installation/#deployment","text":"","title":"Deployment"},{"location":"setup/step-1-observer-and-exporter-installation/#docker","text":"You can use deployment script for docker published here:","title":"Docker"},{"location":"setup/step-1-observer-and-exporter-installation/#kubernetes-using-helm","text":"You can use helm chart for this described here:","title":"Kubernetes using HELM"},{"location":"setup/step-2-client-library-integration/","text":"","title":"Step 2 Client Library Integration"},{"location":"setup/step-3-visualization/","text":"Prerequisites \u00b6 BigQuery \u00b6 Stores the WebRTC reports for further analysis and visualization.","title":"Step 3 Visualization"},{"location":"setup/step-3-visualization/#prerequisites","text":"","title":"Prerequisites"},{"location":"setup/step-3-visualization/#bigquery","text":"Stores the WebRTC reports for further analysis and visualization.","title":"BigQuery"}]}